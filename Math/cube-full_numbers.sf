#!/usr/bin/ruby

# Fast algorithm for generating all the cube-full numbers <= n.
# A positive integer n is considered cube-full, if for every prime p that divides n, so does p^3.

# See also:
#   THE DISTRIBUTION OF CUBE-FULL NUMBERS, by P. SHIU (1990).

# OEIS:
#   https://oeis.org/A036966 -- 3-full (or cube-full, or cubefull) numbers: if a prime p divides n then so does p^3.

func cubefull_numbers (n) {   # cubefull numbers <= n

    var cubefull = Set()

    for a in (1..iroot(n, 5)) {
        for b in (1 .. iroot(idiv(n, a**5), 4)) {
            var v = (a**5 * b**4)
            for c in (1..iroot(idiv(n, v), 3)) {
              cubefull << v*c*c*c
            }
        }
    }

    cubefull.sort
}


say cubefull_numbers(1e4)

__END__
[1, 8, 16, 27, 32, 64, 81, 125, 128, 216, 243, 256, 343, 432, 512, 625, 648, 729, 864, 1000, 1024, 1296, 1331, 1728, 1944, 2000, 2048, 2187, 2197, 2401, 2592, 2744, 3125, 3375, 3456, 3888, 4000, 4096, 4913, 5000, 5184, 5488, 5832, 6561, 6859, 6912, 7776, 8000, 8192, 9261, 10000]
