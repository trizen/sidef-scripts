#!/usr/bin/ruby

# Expansion of cyclotomic polynomials.

# See also:
#   https://rosettacode.org/wiki/Cyclotomic_Polynomial
#   https://en.wikipedia.org/wiki/Cyclotomic_polynomial
#   https://metacpan.org/pod/Math::Polynomial

var Poly = require('Math::Polynomial')
Poly.string_config(Hash(fold_sign => true, prefix => "", suffix => ""))

func cyclotomic(n) is cached {
    var x = Poly.monomial(n).sub_const(1)
    return x if (n == 1)
    var y = n.divisors.grep { _ < n }.map {|d| __FUNC__(d) }.reduce(:mul)
    x.div(y)
}

say "First 30 cyclotomic polynomials:"
for k in (1..30) {
    say ("Φ(#{k}) = ", cyclotomic(k))
}

say "\nSmallest cyclotomic polynomial with n or -n as a coefficient:"
for n in (1..3) {
    var k = (1..Inf -> lazy.grep {
        .is_odd && !.is_prime && .is_squarefree
    }.first {|k|
        [cyclotomic(k).coeff].first { .abs == n }
    })
    say "Φ(#{k}) has coefficient with magnitude = #{n}"
}
