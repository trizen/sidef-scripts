#!/usr/bin/ruby

# a(n) is the smallest number such that the product a(1)*a(2)*...*a(n) falls between a twin prime pair.

# OEIS sequence:
#   https://oeis.org/A036014

func a(n) is cached {

    var t = (0..^n -> prod_by {|n|
        a(n)
    })

    2..Inf -> first_by {|k| is_prime(t*k + 1) && is_prime(t*k - 1) }
}

var arr = 20.of(a)   # [4, 3, 5, 3, 9, 6, 43, 18, 41, 82, 63, 47, 64, 108, 41, 192, 150, 91, 15, 5]

say arr.map_reduce {|a,b| a*b }.map { .dec }
say arr.map_reduce {|a,b| a*b }.map { .inc }

__END__
[3, 11, 59, 179, 1619, 9719, 417959, 7523279, 308454479, 25293267359, 1593475843679, 74893364652959, 4793175337789439, 517662936481259519, 21224180395731640319, 4075042635980474941439, 611256395397071241215999, 55624331981133482950655999, 834364979717002244259839999, 4171824898585011221299199999]
[5, 13, 61, 181, 1621, 9721, 417961, 7523281, 308454481, 25293267361, 1593475843681, 74893364652961, 4793175337789441, 517662936481259521, 21224180395731640321, 4075042635980474941441, 611256395397071241216001, 55624331981133482950656001, 834364979717002244259840001, 4171824898585011221299200001]
