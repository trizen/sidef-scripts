#!/usr/bin/ruby

# Daniel "Trizen" È˜uteu
# License: GPLv3
# Date: 21 December 2016
# https://github.com/trizen

# A closed-form for generalized Fibonacci numbers:
#   a(0) = 1
#   a(1) = 1
#   a(n) = x * a(n-1) + a(n-2)

# a(n) = (2^(-n - 1) * ((x - 2) * (x - sqrt(x^2 + 4))^n + sqrt(x^2 + 4) * (x - sqrt(x^2 + 4))^n - (x - 2) * (sqrt(x^2 + 4) + x)^n + sqrt(x^2 + 4) * (sqrt(x^2 + 4) + x)^n))/sqrt(x^2 + 4)

for x in (1..10) {
    say 10.of { |n|
        ((pow(2, -n - 1) * (pow(x - sqrt(x**2 + 4), n)*(x-2) + sqrt(x**2 + 4)*pow(x - sqrt(x**2 + 4), n) - pow(sqrt(x**2 + 4) + x, n)*(x-2) + sqrt(x**2 + 4)*pow(sqrt(x**2 + 4) + x, n))) / sqrt(x**2 + 4))
    }.map{ .round(0) }
}

__END__
[1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
[1, 3, 7, 17, 41, 99, 239, 577, 1393, 3363]
[1, 4, 13, 43, 142, 469, 1549, 5116, 16897, 55807]
[1, 5, 21, 89, 377, 1597, 6765, 28657, 121393, 514229]
[1, 6, 31, 161, 836, 4341, 22541, 117046, 607771, 3155901]
[1, 7, 43, 265, 1633, 10063, 62011, 382129, 2354785, 14510839]
[1, 8, 57, 407, 2906, 20749, 148149, 1057792, 7552693, 53926643]
[1, 9, 73, 593, 4817, 39129, 317849, 2581921, 20973217, 170367657]
[1, 10, 91, 829, 7552, 68797, 626725, 5709322, 52010623, 473804929]
[1, 11, 111, 1121, 11321, 114331, 1154631, 11660641, 117761041, 1189271051]
