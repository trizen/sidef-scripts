#!/usr/bin/ruby

# Daniel "Trizen" È˜uteu
# License: GPLv3
# Date: 07 February 2017
# https://github.com/trizen

# Faulhaber's triangle (in reverse order).

# Each row of the triangle represents the coefficients
# for the sum 1^p + 2^p + 3^p + ... + n^p.

# For example, the third row is the solution for:
#  1^2 + 2^2 + 3^2 + ... + n^2
#
# which can be written as:
#   1/3 * (1/2*n^1 + 3/2*n^2 + 1*n^3)

# See also:
#   https://en.wikipedia.org/wiki/Faulhaber%27s_formula

# Inspired by John Conway:
#    https://www.youtube.com/watch?v=Uy1B_eGXQ0g

func faulhaber_s_triangle(p) {
    var formula = gather {
        for j in (0 .. p) {
            take(("%6s" % (binomial(p+1, j) * j.bernfrac -> as_rat)))
        }
    }
    formula.reverse.join(' ')
}

for p in (0 .. 11) {
    printf("%s\n", faulhaber_s_triangle(p))
}


__END__
     1
     1      1
   1/2    3/2      1
     0      1      2      1
  -1/6      0    5/3    5/2      1
     0   -1/2      0    5/2      3      1
   1/6      0   -7/6      0    7/2    7/2      1
     0    2/3      0   -7/3      0   14/3      4      1
 -3/10      0      2      0  -21/5      0      6    9/2      1
     0   -3/2      0      5      0     -7      0   15/2      5      1
   5/6      0  -11/2      0     11      0    -11      0   55/6   11/2      1
     0      5      0  -33/2      0     22      0  -33/2      0     11      6      1
