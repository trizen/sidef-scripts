#!/usr/bin/ruby

# Daniel "Trizen" È˜uteu
# Date: 15 February 2021
# https://github.com/trizen

# Generate k-almost prime numbers in range [a,b]. (not in sorted order)

# See also:
#   https://en.wikipedia.org/wiki/Almost_prime

func almost_prime_numbers(a, b, k, callback) {

    if (k == 1) {
        return each_prime(a, b, callback)
    }

    a = max(2**k, a)

    func (m, p, k) {

        if (k == 1) {

            each_prime(max(p, ceil(a/m)), idiv(b, m), {|q|
                callback(m*q)
            })

            return nil
        }

        var s = idiv(b,m).iroot(k)

        while (p <= s) {

            var t = m*p

            # Optional optimization for tight ranges
            if (ceil(a/t) > idiv(b, t)) {
                p.next_prime!
                next
            }

            __FUNC__(t, p, k-1)
            p.next_prime!
        }
    }(1, 2, k)

    return callback
}

# Generate 5-almost primes in the range [50, 1000]

var k    = 5
var from = 50
var upto = 1000

var arr = gather {
    almost_prime_numbers(from, upto, k, { take(_) })
}.sort

assert_eq(arr, from..upto -> grep{.is_almost_prime(k)})     # just for testing

say arr
