#!/usr/bin/ruby

# Computing the inverse of the sigma_k(n) function, for any k >= 1.
# Translation of invphi.gp ver. 2.1 by Max Alekseyev.

# See also:
#   https://home.gwu.edu/~maxal/gpscripts/

func dynamicPreimage(N, L) {

    var r = Hash(1 => [1])

    L.each {|l|
        var t = Hash()
        l.each_2d {|a,b|
            N/a -> divisors.each {|d|
                t{a*d} := [] << (r{d} ~S* b)... if r.has(d)
            }
        }
        t.each {|k,v|
            r{k} := [] << v...
        }
    }

    r{N} \\ [] -> sort
}

func dynamicMin(N, L) {
    var r = Hash(1 => 1)

    L.each {|l|
        var t = Hash()
        l.each_2d {|a,b|
            N/a -> divisors.each {|d|
                if (r.has(d)) {
                    var k = a*d
                    t{k} := k -> min!(r{d}*b)
                }
            }
        }

        t.each {|k,v|
            r{k} := v -> min!(v)
        }
    }

    r{N}
}

func dynamicMax(N, L) {
    var r = Hash(1 => 1)

    L.each {|l|
        var t = Hash()
        l.each_2d {|a,b|
            N/a -> divisors.each {|d|
                if (r.has(d)) {
                    var k = d*a
                    t{k} := 0 -> max!(r{d}*b)
                }
            }
        }

        t.each {|k,v|
            r{k} := 0 -> max!(v)
        }
    }

    r{N}
}

func cook_sigma(N,k) {
    var L = Hash()

    N.divisors.each {|d|

        next if (d == 1)

        (d-1).factor_exp.map { .head }.each {|p|

            var q = (d*(p**k - 1) + 1)
            var t = valuation(q, p)

            next if (t<=k || t%k || (q != p**t))

            L{p} := [] << [d, p**(t/k - 1)]
        }
    }

    L.values
}

func inverse_sigma(N,k=1) {
    dynamicPreimage(N, cook_sigma(N,k))
}

func inverse_sigma_min(N,k=1) {
    dynamicMin(N, cook_sigma(N,k))
}

func inverse_sigma_max(N,k=1) {
    dynamicMax(N, cook_sigma(N,k))
}

say inverse_sigma(120)           #=> [54, 56, 87, 95]
say inverse_sigma(22100, 2)      #=> [120, 130, 141]

say inverse_sigma_min(10!)      #=> 876960
say inverse_sigma_max(10!)      #=> 3624941
