#!/usr/bin/ruby

# Simple implementation of the Lucas-Lehmer primality test for Mersenne numbers.

# M = 2^p - 1 is prime if and only if the Lucas sequence V_n(P,Q) satisfies the following congruence:
#   V_M(4, 1) == 4 (mod M)

# See also:
#   https://en.wikipedia.org/wiki/Lucas%E2%80%93Lehmer_primality_test
#   https://oeis.org/A003010 -- A Lucas-Lehmer sequence: a(0) = 4; for n>0, a(n) = a(n-1)^2 - 2.

func lucas_lehmer(p) {

    var M = (1<<p - 1)
    var S = 4

    p-2 -> times {
        S = (powmod(S, 2, M) - 2)
    }

    S == 0
}

for p in (primes(3, 1000)) {
    if (lucas_lehmer(p)) {
        assert(is_mersenne_prime(p), p)
        say "M#{p} is prime"
    }
}
