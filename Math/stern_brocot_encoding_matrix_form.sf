#!/usr/bin/ruby

# Daniel "Trizen" È˜uteu
# Date: 10 February 2018
# https://github.com/trizen

# Encode a given fraction into a string of L's and R's,
# indicating the turning points in the Stern-Brocot tree.

# The decoding function takes a string of L's and R's and
# constructs the fraction by navigating the Stern-Brocot tree.

# See also:
#   https://www.youtube.com/watch?v=qPeD87HJ0UA
#   https://en.wikipedia.org/wiki/Stern%E2%80%93Brocot_tree

func stern_brocot_encode (Number r) {
    stern_brocot_encode([[r.nu, 0], [r.de, 0]])
}

func stern_brocot_encode (Array A) {

    var (m, n) = (
        abs(A[0][0] + A[0][1]),
        abs(A[1][0] + A[1][1]),
    )

    var e = ''

    loop {
        var c = (m <=> n)

        if (c == 0) {
            break
        }
        elsif (c < 0) {
            e += 'L'
            n -= m
        }
        else {
            e += 'R'
            m -= n
        }
    }

    return e
}

func stern_brocot_decode (String e) {
    var A = [[1,0],[0,1]]
    var L = [[1,0],[1,1]]
    var R = [[1,1],[0,1]]

    e.each { |c|
        if (c == 'L') {
            A = (A `mmul` L)
        }
        else {
            A = (A `mmul` R)
        }
    }

    return A
}

func matrix2rat (Array A) {
    (A[0][0] + A[0][1]) / (A[1][0] + A[1][1])
}

say stern_brocot_decode(stern_brocot_encode(5/7))       # [[3, 2], [4, 3]]
say stern_brocot_decode(stern_brocot_encode(43/97))     # [[4, 39], [9, 88]]
say stern_brocot_decode(stern_brocot_encode(97/43))     # [[88, 9], [39, 4]]

say ''

say stern_brocot_encode(3/11)       # LLLRL
say stern_brocot_encode(19/8)       # RRLLRL

say ''

say stern_brocot_decode('LLLRL')        # [[2, 1], [7, 4]]
say stern_brocot_decode('RRLLRL')       # [[12, 7], [5, 3]]

say ''

say stern_brocot_decode('LRLRLRLRLRLRLRLRLRLRLRLRLRLRLR')       # [[514229, 832040], [832040, 1346269]]
say stern_brocot_decode('RLRLRLRLRLRLRLRLRLRLRLRLRLRLRL')       # [[1346269, 832040], [832040, 514229]]

say ''

say stern_brocot_decode('RLLRR')                    # [[3, 7], [2, 5]]
say stern_brocot_decode('RLLRRLL')                  # [[17, 7], [12, 5]]
say stern_brocot_decode('RLLRRLLRR')                # [[17, 41], [12, 29]]
say stern_brocot_decode('RLLRRLLRRLL')              # [[99, 41], [70, 29]]
say stern_brocot_decode('RLLRRLLRRLLRR')            # [[99, 239], [70, 169]]
say stern_brocot_decode('RLLRRLLRRLLRRLL')          # [[577, 239], [408, 169]]
say stern_brocot_decode('RLLRRLLRRLLRRLLRR')        # [[577, 1393], [408, 985]]

say ''

say matrix2rat(stern_brocot_decode('RLLRRLLRRLLRRLLRRLL'))      # 1.414213...
