#!/usr/bin/ruby

# Daniel "Trizen" È˜uteu
# Date: 12 January 2018
# https://github.com/trizen

# Two-sided primes: deleting any number of digits at left or at right, but not both, leaves a prime.

# OIES sequence:
#   https://oeis.org/A020994

# See also:
#   https://www.youtube.com/watch?v=azL5ehbw_24
#   https://en.wikipedia.org/wiki/Truncatable_prime

func left_truncatable_primes(p) {

    var seq = [p]

    for n in (1..9) {
        var t = Number("#{n}#{p}")
        if (t.is_prime) {
            seq << left_truncatable_primes(t)...
        }
    }

    return seq
}

func right_truncatable_primes(p) {

    var seq = [p]

    for n in ([1, 3, 7, 9]) {
        var t = Number("#{p}#{n}")
        if (t.is_prime) {
            seq << right_truncatable_primes(t)...
        }
    }

    return seq
}

func both_truncatable_primes() {     # finite sequence
    9.primes.map(right_truncatable_primes).flat & 9.primes.map(left_truncatable_primes).flat
}

say both_truncatable_primes()   #=> [2, 3, 5, 7, 23, 37, 53, 73, 313, 317, 373, 797, 3137, 3797, 739397]
