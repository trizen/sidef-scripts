#!/usr/bin/ruby

# A simple Sudoku solver (recursive).

# See also:
#    http://rosettacode.org/wiki/Sudoku

func check(i, j) is cached {
    var (id, im) = i.divmod(9)
    var (jd, jm) = j.divmod(9)

    jd == id && return true
    jm == im && return true

    var id2 = id//3
    var jd2 = jd//3

    jd2 == id2 || return false

    jm//3 == im//3
}

func solve(board) {
    for i in ^board {
        board[i] && next
        var *t = board[^board -> grep {|j| check(i, j) }]

        { |k|
            t.contains(k) && next
            board[i] = k
            solve(board)
        } * 9

        board[i] = 0
        return nil
    }

    for i in ^board {
        print "#{board[i]} ";
        print " "  if (3  -> divides(i+1))
        print "\n" if (9  -> divides(i+1))
        print "\n" if (27 -> divides(i+1))
    }
}

var board = %i(
    5 3 0  0 2 4  7 0 0
    0 0 2  0 0 0  8 0 0
    1 0 0  7 0 3  9 0 2

    0 0 8  0 7 2  0 4 9
    0 2 0  9 8 0  0 7 0
    7 9 0  0 0 0  0 8 0

    0 0 0  0 3 0  5 0 6
    9 6 0  0 1 0  3 0 0
    0 5 0  6 9 0  0 1 0
)

solve(board)
